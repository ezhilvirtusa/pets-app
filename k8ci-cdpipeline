pipeline{
    agent any
    stages{
        stage('Build package'){
            steps{
                git credentialsId: 'GIT', 
                url: 'https://github.com/ezhilvirtusa/pets-app.git'
                withMaven(maven: 'maven3') {
                    sh "mvn clean package"
                }
            }
        }
        stage('Build the  Image'){
            steps{
                sh "docker build . -t ezhilc/pets-app:${dockerTag()}"
               
            }
        }
        stage('Push the Image'){
            steps{
                withCredentials([string(credentialsId: 'dockerpass', variable: 'Dockercred')]) {
                     sh "docker login -u ezhilc -p ${Dockercred}"
                     sh "docker push ezhilc/pets-app:${dockerTag()}"
                }
            }
        }
        stage('Deploy k8s'){
            steps{
                sh """
                    version=${dockerTag()}
                    sed -i "s/commithash/\${version}/g" pod.yml
                  """
                
                kubernetesDeploy configs: 'pod.yml', 
                kubeConfig: [path: ''], 
                kubeconfigId: 'Kubernetconfig', 
                secretName: '', 
                ssh: [sshCredentialsId: '*', sshServer: ''], 
                textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
            }
        }
    }
}
def dockerTag(){
def commitId = sh returnStdout: true, script: 'git rev-parse --short HEAD'
return commitId
}
